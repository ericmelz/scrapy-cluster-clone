# This workflow will build scrapy-cluster dockerfiles and push them to ecr
name: Scrapy Cluster CI

on:
  push:
    branches:
    - kompose
    paths-ignore:
    - helm/crawler/environments/ci/version.yaml
    - helm/crawler/environments/dev/version.yaml

jobs:
  build-eric-crawler:

    runs-on: ubuntu-latest
    env:
      SKIP_STEPS: true  # Set this to false to run all steps
  
    steps:
    - uses: actions/checkout@v2

    - name: Build and Push Docker Image to ecr
      if: env.SKIP_STEPS != 'true'
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: eric-crawler
        dockerfile: docker/crawler/Dockerfile.py3
        registry: 638173936794.dkr.ecr.us-east-1.amazonaws.com
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  build-eric-kafka-monitor:

    runs-on: ubuntu-latest
    env:
      SKIP_STEPS: true  # Set this to false to run all steps
  
    steps:
    - uses: actions/checkout@v2

    - name: Build and Push Docker Image to ecr
      if: env.SKIP_STEPS != 'true'
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: eric-kafka-monitor
        dockerfile: docker/kafka-monitor/Dockerfile.py3
        registry: 638173936794.dkr.ecr.us-east-1.amazonaws.com
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  build-eric-redis-monitor:

    runs-on: ubuntu-latest
    env:
      SKIP_STEPS: true  # Set this to false to run all steps
  
    steps:
    - uses: actions/checkout@v2

    - name: Build and Push Docker Image to ecr
      if: env.SKIP_STEPS != 'true'
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: eric-redis-monitor
        dockerfile: docker/redis-monitor/Dockerfile.py3
        registry: 638173936794.dkr.ecr.us-east-1.amazonaws.com
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  build-eric-crawler-rest:

    runs-on: ubuntu-latest
    env:
      SKIP_STEPS: true  # Set this to false to run all steps
  
    steps:
    - uses: actions/checkout@v2

    - name: Build and Push Docker Image to ecr
      if: env.SKIP_STEPS != 'true'
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: eric-crawler-rest
        dockerfile: docker/rest/Dockerfile.py3
        registry: 638173936794.dkr.ecr.us-east-1.amazonaws.com
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


  build-datadoggie:

    runs-on: ubuntu-latest
    env:
      SKIP_STEPS: true  # Set this to false to run all steps

    steps:
    - uses: actions/checkout@v2

    - name: Build and Push Docker Image to ecr
      if: env.SKIP_STEPS != 'true'
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: datadoggie
        dockerfile: docker/datadoggie/Dockerfile.py3
        registry: 638173936794.dkr.ecr.us-east-1.amazonaws.com
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


  record-ci-version:
    needs: [build-eric-kafka-monitor, build-eric-redis-monitor, build-eric-crawler-rest, build-eric-crawler, build-datadoggie]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}  # Use the default GITHUB_TOKEN for checkout

    - name: Configure Git
      run: |
        git config --global user.name 'Github Actions (eric)'
        git config --global user.email 'eric@emelz.com'

    - name: write sha
      run: |
        echo "writing sha ${{ github.sha }}"
        echo "version: ${{ github.sha }}" > helm/crawler/environments/ci/version.yaml
        cat helm/crawler/environments/ci/version.yaml
        git add helm/crawler/environments/ci/version.yaml
        git commit -m "Updated version with SHA"
        git push origin kompose
      env:
        GITHUB_TOKEN: ${{ secrets.ACTION_PAT }}


  deploy-crawler:
    needs: [record-ci-version]
    runs-on: ubuntu-latest

    steps:
    - name: Deploy crawler helm to CI cluster
      run: |
        echo "deploying to cluster"


  test-crawler:
    needs: [deploy-crawler]
    runs-on: ubuntu-latest

    steps:
    - name: Test kafka-monitor
      run: |
        echo "testing kafka-monitor"

    - name: Test redis-monitor
      run: |
        echo "testing redis-monitor"

    - name: Test rest
      run: |
        echo "testing rest"

    - name: Test crawler
      run: |
        echo "testing crawler"

    - name: Tear down
      run: |
        echo "tearing down crawler"


  promote-to-dev:
    needs: [test-crawler]
    runs-on: ubuntu-latest

    steps:
    - name: Copy sha
      run: |
        echo "copying ci sha to dev "

    - name: Deploy crawler helm to Dev cluster
      run: |
        echo "deploying to dev cluster "
